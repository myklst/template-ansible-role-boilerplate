---

- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"
  vars:
    ssh_port: 22
    key_pair_name: "key-pair-{{ molecule_yml['platforms'][0]['name'] }}"
    key_pair_path: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/ssh_key"
  tasks:
    - name: Test for presence of local key pair
      ansible.builtin.stat:
        path: "{{ key_pair_path }}"
      register: key_pair_local

    - name: Delete remote key pair
      openstack.cloud.keypair:
        name: "{{ key_pair_name }}"
        verify: false
        state: absent
      when: not key_pair_local.stat.exists

    - name: Create key pair
      openstack.cloud.keypair:
        name: "{{ key_pair_name }}"
        verify: false
      register: key_pair

    - name: Persist the key pair
      ansible.builtin.copy:
        dest: "{{ key_pair_path }}"
        content: "{{ key_pair.keypair.private_key }}"
        mode: "0600"
      when: key_pair.changed  # noqa no-handler

    - name: Create molecule instance(s)
      openstack.cloud.server:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        flavor: "{{ item.flavor }}"
        security_groups: default
        key_name: "{{ key_pair_name }}"
        network: "{{ item.network }}"
        floating_ip_pools: "{{ item.fip_pool | default(omit) }}"
        meta:
          ssh_user: "{{ item.ssh_user }}"
        verify: false
        config_drive: true
      register: server
      loop: "{{ molecule_yml.platforms | flatten(levels=1) }}"
      async: 7200
      poll: 0

    - name: Wait for instance(s) creation to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      register: os_jobs
      until: os_jobs.finished
      retries: 300
      loop: "{{ server.results | flatten(levels=1) }}"

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config dict
      ansible.builtin.set_fact:
        instance_conf_dict: {
          'instance': "{{ item.server.name }}",
          'instance_id': "{{ item.server.id }}",
          'address': "{{ item.server.addresses.server_vlan[0].addr }}",
          'user': "{{ item.server.metadata.ssh_user }}",
          'port': "{{ ssh_port }}",
          'identity_file': "{{ key_pair_path }}", }
      loop: "{{ os_jobs.results | flatten(levels=1) }}"
      register: instance_config_dict
      when: server.changed | bool  # noqa no-handler

    - name: Convert instance config dict to a list
      ansible.builtin.set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: server.changed | bool  # noqa no-handler

    - name: Dump instance config
      ansible.builtin.copy:
        content: "{{ instance_conf | to_json | from_json | to_yaml }}"
        dest: "{{ molecule_instance_config }}"
        mode: "0755"
      when: server.changed | bool  # noqa no-handler

    - name: Wait for SSH
      ansible.builtin.wait_for:
        port: "{{ ssh_port }}"
        host: "{{ item.address }}"
        search_regex: SSH
        delay: 10
      loop: "{{ lookup('file', molecule_instance_config) | from_yaml | flatten(levels=1) }}"
